#include <iostream>
#include <vector>
#include <time.h>
#include <chrono>
#include <iomanip>


using namespace std;

void BubbleSort(vector<int>& data) {
	// Nested for-loop, O(n^2)
	for (int i = 0; i < data.size(); i++) {
		for (int j = 0; j < data.size() - i - 1; j++) {
			// switch if left number is greater than right
			if (data[j] > data[j + 1]) {
				int temp = data[j];
				data[j] = data[j + 1];
				data[j + 1] = temp;
			}
		}
	}
}

int main() {
	// Sorted Data
	vector<int> sortedData = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
	// displays initial data
	cout << "Sorted Data" << endl << "Unsorted: ";
	for (int i = 0; i < sortedData.size(); i++) {
		cout << sortedData[i] << " ";
	}

	auto tStart1 = chrono::high_resolution_clock::now();      // start time
	BubbleSort(sortedData);
	auto tEnd1 = chrono::high_resolution_clock::now();        // time stopped
	chrono::duration<double> duration1 = tEnd1 - tStart1;

	// displays sorted data
	cout << endl << "Sorted: ";
	for (int i = 0; i < sortedData.size(); i++) {
		cout << sortedData[i] << " ";
	}
	// displays time taken
	cout << endl << fixed << "Time Taken: " << duration1.count() << " sec" << "\n\n";

	// Reverse-Sorted Data
	vector<int> revSortedData = {10, 9, 8, 7, 6, 5, 4, 3, 2, 1};
	// displays initial data
	cout << "Reverse-Sorted Data" << endl << "Unsorted: ";
	for (int i = 0; i < revSortedData.size(); i++) {
		cout << revSortedData[i] << " ";
	}

	auto tStart2 = chrono::high_resolution_clock::now();        // start time
	BubbleSort(revSortedData);
	auto tEnd2 = chrono::high_resolution_clock::now();          // time stopped
	chrono::duration<double> duration2 = tEnd2 - tStart2;

	// displays sorted data
	cout << endl << "Sorted: ";
	for (int i = 0; i < revSortedData.size(); i++) {
		cout << revSortedData[i] << " ";
	}
	// displays time taken
	cout << endl << fixed << "Time Taken: " << duration2.count() << " sec" << "\n\n";

	// Random Data
	vector<int> randomData = { 12, 45, 23, 56, 34, 89, 77, 19, 4 };
	// displays initial data
	cout << "Random Data" << endl << "Unsorted: ";
	for (int i = 0; i < randomData.size(); i++) {
		cout << randomData[i] << " ";
	}

	auto tStart3 = chrono::high_resolution_clock::now();         // start time
	BubbleSort(randomData);
	auto tEnd3 = chrono::high_resolution_clock::now();           // time stopped
	chrono::duration<double> duration3 = tEnd3 - tStart3;

	// displays sorted data
	cout <<endl << "Sorted: ";
	for (int i = 0; i < randomData.size(); i++) {
		cout << randomData[i] << " ";
	}
	// displays time taken
	cout << endl << fixed << "Time Taken: " << duration2.count() << " sec" << endl;

	return 0;
}
