#include <iostream>
#include <vector>
#include <time.h>
#include <iomanip>


using namespace std;

void BubbleSort(vector<int>& data) {
    // nested for-loop, O(n^2)
    for (int i = 0; i < data.size(); i++) {
        // one less element each traversal
        for (int j = 0; j < data.size() - i - 1; j++) {
            // switch if left number is greater than right
            if (data[j] > data[j + 1]) {
                int temp = data[j];
                data[j] = data[j + 1];
                data[j + 1] = temp;
            }
        }
    }
}

int main() {
    // Sorted Data
    vector<int> sortedData = { 1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 };
    // displays initial data
    cout << "Sorted Data" << endl << "Unsorted: ";
    for (int i = 0; i < sortedData.size(); i++) {
        cout << sortedData[i] << " ";
    }

    clock_t start = clock();      // start time
    BubbleSort(sortedData);
    clock_t end = clock();        // time stopped

    // displays sorted data
    cout << endl << "Sorted:   ";
    for (int i = 0; i < sortedData.size(); i++) {
        cout << sortedData[i] << " ";
    }

    // displays time taken
    cout << endl << "Execution time for sorted: " << double(end - start) / CLOCKS_PER_SEC << " secs" << "\n\n";

    // Reverse-Sorted Data
    vector<int> revSortedData = { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9,  8,  7,  6,  5,  4,  3,  2,  1 };
    // displays initial data
    cout << "Reverse-Sorted Data" << endl << "Unsorted: ";
    for (int i = 0; i < revSortedData.size(); i++) {
        cout << revSortedData[i] << " ";
    }

    start = clock();        // start time
    BubbleSort(revSortedData);
    end = clock();         // time stopped
    
    // displays sorted data
    cout << endl << "Sorted:   ";
    for (int i = 0; i < revSortedData.size(); i++) {
        cout << revSortedData[i] << " ";
    }

    // displays time taken
    cout << endl << "Execution time for sorted: " << double(end - start) / CLOCKS_PER_SEC << " secs" << "\n\n";

    // Random Data
    vector<int> randomData = { 12, 45,  23, 56, 34, 89, 77, 19, 4,  91, 85, 100, 72, 64, 50, 93, 80, 17, 44, 57 };
    // displays initial data
    cout << "Random Data" << endl << "Unsorted: ";
    for (int i = 0; i < randomData.size(); i++) {
        cout << randomData[i] << " ";
    }

    start = clock();         // start time
    BubbleSort(randomData);
    end = clock();          // time stopped

    // displays sorted data
    cout << endl << "Sorted:   ";
    for (int i = 0; i < randomData.size(); i++) {
        cout << randomData[i] << " ";
    }

    // displays time taken
    cout << endl << "Execution time for sorted: " << double(end - start) / CLOCKS_PER_SEC << " secs" << endl;

    return 0;
}
